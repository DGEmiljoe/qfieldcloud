version: "3.7"

x-logging:
  &default-logging
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "10"

services:
  db:
    image: postgres:11
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - ${HOST_POSTGRES_PORT}:5432
    logging: *default-logging

  app: &default-django
    build:
      context: ./docker-app
    restart: unless-stopped
    command: gunicorn qfieldcloud.wsgi:application --bind 0.0.0.0:8000 -t 300
    volumes:
      - static_volume:/usr/src/app/staticfiles
      - media_volume:/usr/src/app/mediafiles/
    environment:
      DJANGO_ALLOWED_HOSTS: ${QFIELDCLOUD_HOST}
      DJANGO_SETTINGS_MODULE: ${DJANGO_SETTINGS_MODULE}
      SECRET_KEY: ${SECRET_KEY}
      DEBUG: ${DEBUG}
      SQL_DATABASE: ${POSTGRES_DB}
      SQL_USER: ${POSTGRES_USER}
      SQL_PASSWORD: ${POSTGRES_PASSWORD}
      SQL_HOST: ${POSTGRES_HOST}
      SQL_PORT: ${POSTGRES_PORT}
      STORAGE_ACCESS_KEY_ID: ${STORAGE_ACCESS_KEY_ID}
      STORAGE_SECRET_ACCESS_KEY: ${STORAGE_SECRET_ACCESS_KEY}
      STORAGE_BUCKET_NAME: ${STORAGE_BUCKET_NAME}
      STORAGE_REGION_NAME: ${STORAGE_REGION_NAME}
      STORAGE_ENDPOINT_URL: ${STORAGE_ENDPOINT_URL}
      SENTRY_DSN: ${SENTRY_DSN}
      SENTRY_SERVER_NAME: ${QFIELDCLOUD_HOST}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_PORT: ${REDIS_PORT}
      GEODB_HOST: ${GEODB_HOST}
      GEODB_PORT: ${GEODB_PORT}
      GEODB_USER: ${GEODB_USER}
      GEODB_PASSWORD: ${GEODB_PASSWORD}
      GEODB_DB: ${GEODB_DB}
      ACCOUNT_EMAIL_VERIFICATION: ${ACCOUNT_EMAIL_VERIFICATION}
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_USE_TLS: ${EMAIL_USE_TLS}
      EMAIL_USE_SSL: ${EMAIL_USE_SSL}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
      DEFAULT_FROM_EMAIL: ${DEFAULT_FROM_EMAIL}
      # Settings below are specific to orchestrator
      # TODO : move this to the orchestrator service and keep things DRY (yaml syntax expert needed)
      TMP_DIRECTORY: ${TMP_DIRECTORY}
      QFC_DEFAULT_WORKER_IMAGE: ${QFC_DEFAULT_WORKER_IMAGE}
      QFIELDCLOUD_HOST: ${QFIELDCLOUD_HOST}
    depends_on:
      - db
      - redis
    logging: *default-logging
    labels:
      ofelia.enabled: "true"
      ofelia.job-exec.runcrons.schedule: 0 * * * * *
      ofelia.job-exec.runcrons.command: python manage.py runcrons

  web:
    build:
      context: ./docker-caddy
    restart: unless-stopped
    environment:
      QFIELDCLOUD_HOST: ${QFIELDCLOUD_HOST}
      CADDY_ACME_CA: ${CADDY_ACME_CA}
      ACME_AGREE: "true"
    volumes:
      - static_volume:/home/app/web/staticfiles/
      - media_volume:/home/app/web/mediafiles/
      - caddy_data:/data
    ports:
      - ${WEB_HTTP_PORT}:80
      - ${WEB_HTTPS_PORT}:443
    logging: *default-logging

  # Builders for workers
  # These don't run as part of the stack, but create images that are then ran by the orchestrator
  qgis_worker_320:
    image: opengisch/qfc_worker:3.20.2
    build:
      context: ./docker-qgis
      args:
        QGIS_BASE_IMAGE: final-3_20_2
    tty: true
    command: bash -c "echo QGIS builded"
    logging: *default-logging

  # DUMMY WORKER, NOT TESTED !!
  qgis_worker_318:
    image: opengisch/qfc_worker:3.18
    build:
      context: ./docker-qgis
      args:
        QGIS_BASE_IMAGE: release-3_18
    tty: true
    command: bash -c "echo QGIS builded"
    logging: *default-logging

  redis:
    build:
      context: ./docker-redis
      args:
        REDIS_PASSWORD: ${REDIS_PASSWORD}
    restart: unless-stopped
    ports:
      - "${REDIS_PORT}:6379"
    logging: *default-logging

  orchestrator:
    <<: *default-django
    command: python manage.py dequeue
    user: root # TODO change me to least privileged docker-capable user on the host (/!\ docker users!=hosts users, use UID rather than username)
    volumes:
      # TODO : how can we reuse static/media volumes from default-django to keep things DRY (yaml syntax expert needed)
      - static_volume:/usr/src/app/staticfiles
      - media_volume:/usr/src/app/mediafiles/
      - /var/run/docker.sock:/var/run/docker.sock
      - ${LOG_DIRECTORY}:/log
      - ${TMP_DIRECTORY}:/tmp
    logging: *default-logging
    depends_on:
      - db
      - redis
      - app

  ofelia:
    image: mcuadros/ofelia:v0.3.4
    depends_on:
      - app
    command: daemon --docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

volumes:
  postgres_data:
  static_volume:
  media_volume:
  caddy_data:
